#!/usr/bin/python3

from utils.banner import get_banner
from utils.load_url_blueprints import *
from utils.concurrency import *

from os.path import *
import click
from colorama import Fore, Back, Style


@click.command()
@click.option("--username", "-u", help="Specify username for the target to be hunted")
@click.option("--blueprint", "-b", help="Specify the path to the blueprint", default=None)
@click.option("--threads", "-t", help="Specifies the number of concurrent threads", default=30)
@click.option("--dump", "-d", help="Specifies the dumping file of successful urls", default=None)
def main(username, blueprint, threads, dump):
    banner = get_banner()
    print(Fore.RED + banner)
    print(Fore.YELLOW + "[$] Made by with |_0V∆ê by https://github.com/P-arag/")
    print(Fore.CYAN + "[+] Username to hunt down <: %s" % username)

    urls = load_urls(username)

    if blueprint is not None:
        try:
            urls = load_urls(username, expanduser(blueprint))
        except Exception as urlE:
            print(Fore.RED + f"[*] An Error occurred <: {urlE}")
            exit()

    print(Fore.CYAN + "[+] Urls Loaded Successfully!!")

    try:
        threadsNum = int(threads)
        print(Fore.CYAN + "[+] Threads <: %s" % threads)
    except Exception as threadE:
        print(Fore.RED + f"[*] An Error occurred <: {threadE}")
        exit()

    if dump is not None:
        try:
            dump = expanduser(dump)
            print(Fore.CYAN + "[+] Dumping Location <: %s" % dump)
        except Exception as dumpE:
            print(f"[*] An Error occurred {dumpE}")
            exit()




if __name__ == "__main__":
    main()
